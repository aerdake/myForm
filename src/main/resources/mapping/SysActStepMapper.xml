<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.SysActStepMapper" >
  <resultMap id="BaseResultMap" type="com.example.pojo.SysActStep" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="act_step_id" property="actStepId" jdbcType="BIGINT" />
    <result column="act_id" property="actId" jdbcType="BIGINT" />
    <result column="step_name" property="stepName" jdbcType="VARCHAR" />
    <result column="step_node_type" property="stepNodeType" jdbcType="CHAR" />
    <result column="approve_user_type" property="approveUserType" jdbcType="CHAR" />
    <result column="roles_approve_type" property="rolesApproveType" jdbcType="VARCHAR" />
    <result column="approve_user" property="approveUser" jdbcType="VARCHAR" />
    <result column="role_user" property="roleUser" jdbcType="VARCHAR" />
    <result column="role_form" property="roleForm" jdbcType="VARCHAR" />
    <result column="judge" property="judge" jdbcType="VARCHAR" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="next_node" property="nextNode" jdbcType="VARCHAR" />
    <result column="disagree_select" property="disagreeSelect" jdbcType="CHAR" />
    <result column="disagree_node" property="disagreeNode" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_person" property="createPerson" jdbcType="VARCHAR" />
    <result column="update_person" property="updatePerson" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="recycle" property="recycle" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, act_step_id, act_id, step_name, step_node_type, approve_user_type, roles_approve_type, 
    approve_user, role_user, role_form, judge, priority, next_node, disagree_select, 
    disagree_node, `status`, create_time, update_time, create_person, update_person, 
    remark, recycle
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.pojo.SysActStepExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_act_step
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_act_step
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_act_step
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.pojo.SysActStepExample" >
    delete from sys_act_step
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.pojo.SysActStep" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_act_step (id, act_step_id, act_id, 
      step_name, step_node_type, approve_user_type, 
      roles_approve_type, approve_user, role_user, 
      role_form, judge, priority, 
      next_node, disagree_select, disagree_node, 
      `status`, create_time, update_time, 
      create_person, update_person, remark, 
      recycle)
    values (#{id,jdbcType=BIGINT}, #{actStepId,jdbcType=BIGINT}, #{actId,jdbcType=BIGINT}, 
      #{stepName,jdbcType=VARCHAR}, #{stepNodeType,jdbcType=CHAR}, #{approveUserType,jdbcType=CHAR}, 
      #{rolesApproveType,jdbcType=VARCHAR}, #{approveUser,jdbcType=VARCHAR}, #{roleUser,jdbcType=VARCHAR}, 
      #{roleForm,jdbcType=VARCHAR}, #{judge,jdbcType=VARCHAR}, #{priority,jdbcType=INTEGER}, 
      #{nextNode,jdbcType=VARCHAR}, #{disagreeSelect,jdbcType=CHAR}, #{disagreeNode,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createPerson,jdbcType=VARCHAR}, #{updatePerson,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{recycle,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.pojo.SysActStep" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_act_step
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="actStepId != null" >
        act_step_id,
      </if>
      <if test="actId != null" >
        act_id,
      </if>
      <if test="stepName != null" >
        step_name,
      </if>
      <if test="stepNodeType != null" >
        step_node_type,
      </if>
      <if test="approveUserType != null" >
        approve_user_type,
      </if>
      <if test="rolesApproveType != null" >
        roles_approve_type,
      </if>
      <if test="approveUser != null" >
        approve_user,
      </if>
      <if test="roleUser != null" >
        role_user,
      </if>
      <if test="roleForm != null" >
        role_form,
      </if>
      <if test="judge != null" >
        judge,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="nextNode != null" >
        next_node,
      </if>
      <if test="disagreeSelect != null" >
        disagree_select,
      </if>
      <if test="disagreeNode != null" >
        disagree_node,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="updatePerson != null" >
        update_person,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="recycle != null" >
        recycle,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=BIGINT},
      <if test="actStepId != null" >
        #{actStepId,jdbcType=BIGINT},
      </if>
      <if test="actId != null" >
        #{actId,jdbcType=BIGINT},
      </if>
      <if test="stepName != null" >
        #{stepName,jdbcType=VARCHAR},
      </if>
      <if test="stepNodeType != null" >
        #{stepNodeType,jdbcType=CHAR},
      </if>
      <if test="approveUserType != null" >
        #{approveUserType,jdbcType=CHAR},
      </if>
      <if test="rolesApproveType != null" >
        #{rolesApproveType,jdbcType=VARCHAR},
      </if>
      <if test="approveUser != null" >
        #{approveUser,jdbcType=VARCHAR},
      </if>
      <if test="roleUser != null" >
        #{roleUser,jdbcType=VARCHAR},
      </if>
      <if test="roleForm != null" >
        #{roleForm,jdbcType=VARCHAR},
      </if>
      <if test="judge != null" >
        #{judge,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="nextNode != null" >
        #{nextNode,jdbcType=VARCHAR},
      </if>
      <if test="disagreeSelect != null" >
        #{disagreeSelect,jdbcType=CHAR},
      </if>
      <if test="disagreeNode != null" >
        #{disagreeNode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="updatePerson != null" >
        #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="recycle != null" >
        #{recycle,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.pojo.SysActStepExample" resultType="java.lang.Integer" >
    select count(*) from sys_act_step
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_act_step
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.actStepId != null" >
        act_step_id = #{record.actStepId,jdbcType=BIGINT},
      </if>
      <if test="record.actId != null" >
        act_id = #{record.actId,jdbcType=BIGINT},
      </if>
      <if test="record.stepName != null" >
        step_name = #{record.stepName,jdbcType=VARCHAR},
      </if>
      <if test="record.stepNodeType != null" >
        step_node_type = #{record.stepNodeType,jdbcType=CHAR},
      </if>
      <if test="record.approveUserType != null" >
        approve_user_type = #{record.approveUserType,jdbcType=CHAR},
      </if>
      <if test="record.rolesApproveType != null" >
        roles_approve_type = #{record.rolesApproveType,jdbcType=VARCHAR},
      </if>
      <if test="record.approveUser != null" >
        approve_user = #{record.approveUser,jdbcType=VARCHAR},
      </if>
      <if test="record.roleUser != null" >
        role_user = #{record.roleUser,jdbcType=VARCHAR},
      </if>
      <if test="record.roleForm != null" >
        role_form = #{record.roleForm,jdbcType=VARCHAR},
      </if>
      <if test="record.judge != null" >
        judge = #{record.judge,jdbcType=VARCHAR},
      </if>
      <if test="record.priority != null" >
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.nextNode != null" >
        next_node = #{record.nextNode,jdbcType=VARCHAR},
      </if>
      <if test="record.disagreeSelect != null" >
        disagree_select = #{record.disagreeSelect,jdbcType=CHAR},
      </if>
      <if test="record.disagreeNode != null" >
        disagree_node = #{record.disagreeNode,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createPerson != null" >
        create_person = #{record.createPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.updatePerson != null" >
        update_person = #{record.updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.recycle != null" >
        recycle = #{record.recycle,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_act_step
    set id = #{record.id,jdbcType=BIGINT},
      act_step_id = #{record.actStepId,jdbcType=BIGINT},
      act_id = #{record.actId,jdbcType=BIGINT},
      step_name = #{record.stepName,jdbcType=VARCHAR},
      step_node_type = #{record.stepNodeType,jdbcType=CHAR},
      approve_user_type = #{record.approveUserType,jdbcType=CHAR},
      roles_approve_type = #{record.rolesApproveType,jdbcType=VARCHAR},
      approve_user = #{record.approveUser,jdbcType=VARCHAR},
      role_user = #{record.roleUser,jdbcType=VARCHAR},
      role_form = #{record.roleForm,jdbcType=VARCHAR},
      judge = #{record.judge,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=INTEGER},
      next_node = #{record.nextNode,jdbcType=VARCHAR},
      disagree_select = #{record.disagreeSelect,jdbcType=CHAR},
      disagree_node = #{record.disagreeNode,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_person = #{record.createPerson,jdbcType=VARCHAR},
      update_person = #{record.updatePerson,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      recycle = #{record.recycle,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.pojo.SysActStep" >
    update sys_act_step
    <set >
      <if test="actStepId != null" >
        act_step_id = #{actStepId,jdbcType=BIGINT},
      </if>
      <if test="actId != null" >
        act_id = #{actId,jdbcType=BIGINT},
      </if>
      <if test="stepName != null" >
        step_name = #{stepName,jdbcType=VARCHAR},
      </if>
      <if test="stepNodeType != null" >
        step_node_type = #{stepNodeType,jdbcType=CHAR},
      </if>
      <if test="approveUserType != null" >
        approve_user_type = #{approveUserType,jdbcType=CHAR},
      </if>
      <if test="rolesApproveType != null" >
        roles_approve_type = #{rolesApproveType,jdbcType=VARCHAR},
      </if>
      <if test="approveUser != null" >
        approve_user = #{approveUser,jdbcType=VARCHAR},
      </if>
      <if test="roleUser != null" >
        role_user = #{roleUser,jdbcType=VARCHAR},
      </if>
      <if test="roleForm != null" >
        role_form = #{roleForm,jdbcType=VARCHAR},
      </if>
      <if test="judge != null" >
        judge = #{judge,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="nextNode != null" >
        next_node = #{nextNode,jdbcType=VARCHAR},
      </if>
      <if test="disagreeSelect != null" >
        disagree_select = #{disagreeSelect,jdbcType=CHAR},
      </if>
      <if test="disagreeNode != null" >
        disagree_node = #{disagreeNode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="updatePerson != null" >
        update_person = #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="recycle != null" >
        recycle = #{recycle,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.pojo.SysActStep" >
    update sys_act_step
    set act_step_id = #{actStepId,jdbcType=BIGINT},
      act_id = #{actId,jdbcType=BIGINT},
      step_name = #{stepName,jdbcType=VARCHAR},
      step_node_type = #{stepNodeType,jdbcType=CHAR},
      approve_user_type = #{approveUserType,jdbcType=CHAR},
      roles_approve_type = #{rolesApproveType,jdbcType=VARCHAR},
      approve_user = #{approveUser,jdbcType=VARCHAR},
      role_user = #{roleUser,jdbcType=VARCHAR},
      role_form = #{roleForm,jdbcType=VARCHAR},
      judge = #{judge,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=INTEGER},
      next_node = #{nextNode,jdbcType=VARCHAR},
      disagree_select = #{disagreeSelect,jdbcType=CHAR},
      disagree_node = #{disagreeNode,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_person = #{createPerson,jdbcType=VARCHAR},
      update_person = #{updatePerson,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      recycle = #{recycle,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.example.pojo.SysActStepExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_act_step
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>